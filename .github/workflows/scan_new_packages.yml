name: Scan new pypi pkgs
on:
  workflow_dispatch:
  schedule:
    - cron:  '*/20 * * * *'


jobs:
  scan_new_pypi_pkgs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
    - run: pip3 install guarddog semgrep

    - run: sudo apt-get install yara -y

    - name: clone ttp yara rules
      run: git clone https://github.com/h4sh5/mal-library-ttps

    - name: get new packages names
      run: python3 get_packages.py | tee new.txt

    - name: download all new packages
      run: |
        mkdir packages;
        cd packages;
        cat ../new.txt | parallel pip download --no-deps || echo ignoring some error $?
        for i in *; do unzip -- "$i"; done || echo ignorin error $?
        for i in $(cat ../scanned_pkgs.txt); do rm -rf -- "$i" "$i-dist-info"; done

    - name: run guarddog scan
      run: |
        guarddog pypi verify -x single_python_file --output-format=json new.txt > report.json
    
    - name: run secret scan
      run: semgrep --json -c p/secrets packages/ | tee -a secrets.jsonl.txt

    - name: run yara scan
      run: yara mal-library-ttps/yara-rules/sus_pkg.yara packages | tee  new_yara_results.txt

    - name: suspicious files detection
      run: |
        bash detect_sus_file_formats.sh 

    - name: high risk pkgs detection
      run: |
        python3 raise_high_risk_pkgs.py || echo errors occurred here
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


    - name: Push scanned packages to cache
      run: | 
        cat new.txt >> scanned_pkgs.txt
        cat new_yara_results.txt >> yara_results.txt
        cd packages/ ; ls -d * |  grep -v dist-info >> ../scanned_pkgs.txt; cd ..
        sort -u scanned_pkgs.txt > scanned_pkgs.txt.1
        mv scanned_pkgs.txt.1 scanned_pkgs.txt
        git add *.txt *.csv
        git config --global user.name 'PyPi Scan Bot by h4sh'
        git config --global user.email 'pypi-scan-bot-h4sh@open-source.local'
        git config --global branch.autoSetupMerge always
        git pull
        git commit -m "new scan output $(date)"
        git push 

    - name: Archive code coverage results
      uses: actions/upload-artifact@v3
      with:
        name: new-scan-report
        path: report.json




